#!/bin/zsh

ME=$(basename $0)
FZF=(-m --preview-window="up:70%" --preview="svn preview {2}")

case $1 in
	list)
		NAME=${2:-\/}

		if [ "$NAME" = "/" ]; then
			$SVN status | sed "/--- Changelist/,$ d" | grep -v "^\\?" | grep -v -e '^$'
		else
			$SVN status | sed -n "/--- Changelist '$NAME'/,/--- Changelist/ p" | grep -v "\--- Changelist" | grep -v -e '^$'
		fi
		;;

	lists)
		[ $( $SVN status | wc -l ) -gt 0 ] && echo \/
		$SVN status | grep "\--- Changelist" | awk '{print $3}' | sed -e "s/^'\([^']*\)':/\1/"
		;;

	add)
		LIST=$2
		FILE=$3

		[ -z $LIST ] && echo "Missing target list" && exit 1
		[ "$LIST" = "/" ] && echo "Cannot add to root list" && exit 1

		if [ -z "$FILE" ]; then
			[ $( $0 list / | wc -l ) -eq 0 ] && echo "Nothing to add" && exit 0

			$0 list / \
				| fzf ${FZF[@]} \
					--header=$'\n''^Space=Select all' \
					--bind='ctrl-space:select-all' \
				| awk '{ print $2 }' \
				| xargs -n1 $SVN changelist $LIST
		else
			$SVN changelist $LIST $FILE
		fi
		;;

			#| fzf -m --preview-window="up:70%" --preview="$PREVIEW" \
	remove)
		LIST=$2
		FILE=$3

		[ -z $LIST ] && echo "Missing source list" && exit 1
		[ "$LIST" = "/" ] && echo "Cannot remove from root list" && exit 1
		[ $( $0 list $LIST | wc -l ) -eq 0 ] && echo "Nothing to remove" && exit 0

		if [ -z "$FILE" ]; then
			$0 list $LIST \
				| fzf ${FZF[@]} \
					--header=$'\n''^Space=Select all' \
					--bind='ctrl-space:select-all' \
				| awk '{ print $2 }' \
				| xargs -n1 $SVN changelist --remove 
		else
			$SVN changelist --remove $FILE
		fi
		;;
	
	reset)
		LIST=$2
		$0 list $LIST \
			| awk '{ print $2 }' \
			| xargs -n1 $SVN changelist --remove 
		;;

	commit)
		LIST=$2
		$SVN commit --changelist $LIST
		;;

	preview)
		$ME \
			| fzf \
				--header-lines=1 \
				--preview="svn preview {4}"
		;;
	
	update)
		$ME remote \
			| fzf \
				--header-lines=1 \
				--preview="$ME remote diff {2} {4}"
		;;

	remote)
		TARGET=${2:-.}
		LEN=$( $0 lists | awk '{print length}' | sort -nr | head -1 )
		LS=/
		while read LINE; do
			if [[ "$LINE" =~ ^#\--- ]]; then
				LS=$( echo $LINE | awk '{print $3}' | sed -e "s/^'\([^']*\)':/\1/" )
			elif [[ "$LINE" =~ ^#(Revision|Status) ]]; then
				echo $LINE[2,-1]
			else
				STATUS=$( echo ${LINE[2,11]} | sed -e "s/\ /-/g" )
				REV=$( echo ${LINE[13,19]} | xargs )
				printf "%-${LEN}s  %s %6s %s" "$LS" "$STATUS" "${REV:-?}" "${LINE[22,-1]}"
				echo
			fi
		done <<< $( svn status -u $TARGET | grep -v "^$" | sed -e "s/^/#/" )
		;;

	*)
		TARGET=${1:-.}
		LEN=$( $0 lists | awk '{print length}' | sort -nr | head -1 )
		LS=/
		while read LINE; do
			if [[ "$LINE" =~ ^#\--- ]]; then
				echo $LINE[2,-1]
			elif [[ "$LINE" =~ ^#(Revision|Status) ]]; then
				echo $LINE[2,-1]
			elif [[ "$LINE" =~ Summary.* ]]; then
				# do nothing
			elif [[ "$LINE" =~ Text\ conflicts: ]]; then
				# do nothing
			else
				STATUS=$( echo ${LINE[2,8]} | sed -e "s/\ /-/g" )
				REV=$( $SVN info ${LINE[10,-1]} 2>&1 | egrep "^Revision:" | awk '{print $2}' )
				printf "%-${LEN}s  %s--- %6s %s" "$LS" "$STATUS" "${REV:-?}" "${LINE[9,-1]}"
				echo
			fi
		done <<< $( svn status $TARGET | grep -v "^$" | sed -e "s/^/#/" )
		;;

esac
