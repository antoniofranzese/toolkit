#!/bin/zsh

[ -z "$KAFKA_HOME" ] && echo "KAFKA_HOME is not set" && exit 1

CLIP=${$(command -v clip-copy):-cat}
ME=$0

KAFKA_TOPICS=$KAFKA_HOME/bin/kafka-topics.sh

CMD=$1
[[ $# > 0 ]] && shift

case "$CMD" in 

	create)
		if [ -z "$1" ]; then
			echo -n "--topic name --replication-factor 1 --partitions 1" | $CLIP  
			echo
		else
			eval $KAFKA_TOPICS --create $*	
		fi
		;;

	alter)
		if [ -z "$1" ]; then
			echo -n "--topic name --config retention.ms=10000 --deleteConfig retention.ms" | $CLIP 
			echo
		else
			eval $KAFKA_TOPICS --alter $*	
		fi
		;;

	delete)
		if [ -z "$1" ]; then
			echo -n "--topic name" | $CLIP 
			echo
		else
			eval $KAFKA_TOPICS --delete $*	
		fi
		;;

	describe)
		if [ -z "$1" ]; then
			echo -n "--topic name" | $CLIP 
			echo
		else
			eval $KAFKA_TOPICS --describe $*	
		fi
		;;
	
	offset)

		if [ -z "$1" ]; then
			echo -n "--topic name" | $CLIP 
			echo
		else

    		SOURCE1=$(mktemp kafka-topic-XXXXXX)
    		SOURCE2=$(mktemp kafka-topic-XXXXXX)
			trap "rm -f $SOURCE1 $SOURCE2" 0 1 2 5 15

			
			TOOL=$KAFKA_HOME/bin/kafka-run-class.sh\ kafka.tools.GetOffsetShell
			CMDLINE=$(echo $* | sed s/bootstrap-server/broker-list/ )
			eval $TOOL $CMDLINE --time -1 > $SOURCE1
			eval $TOOL $CMDLINE --time -2 > $SOURCE2
			join -j2 -t: $SOURCE1 $SOURCE2 | awk -F: '{ print $2 ":" $1 ":" $5 ":" $3 ":" ($3 - $5); }' \
				| prepend "TOPIC:PARTITION:FIRST:LAST:COUNT" \
			    | column -t -s:
		fi
		;;

	count)
		eval $0 offset $* | awk '{print $5}' | tail -n +2 | paste -sd+ - | bc	
		;;
	
	list|browse)
		;;

	*)
		eval $KAFKA_TOPICS $CMD $*	
		;;
esac
