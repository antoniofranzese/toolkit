#!/bin/zsh

ME=$(basename $0)
CMDLINE=$*

confirm() {
	echo 'Press any key to continue...'
	read -k1 -s
}

reload() {
	eval $ME $CMDLINE
}

case $1 in

	preview)
		shift
		NAME=$1
		LOCAL_MOD=${2[1]}
		REMOTE_MOD=${2[9]}
		if [ "$REMOTE_MOD" = "*" ]; then
			#HEAD=$($SVN info $NAME 2>&1 | grep "^Relative URL:" | cut -d" " -f3)\@HEAD
			#eval $SVN diff $NAME $HEAD | delta --file-style omit --hunk-header-style omit --paging never --line-numbers
			svn preview $NAME head
		else
			svn preview $NAME
		fi
		;;
	
	*)
		OUT=$(svn changes remote \
			| fzf -m \
				--no-sort \
				--header=$'\n''^U=Update ^R=Revert ^M=Merge ^Space=Select all | ^S=Stage ^X=Unstage ^T=Commit' \
				--header-lines=2 \
				--bind='ctrl-space:select-all' \
				--expect="ctrl-u,ctrl-r,ctrl-m,ctrl-s,ctrl-x,ctrl-t" \
				--preview="$ME preview {4} {2}" \
			| tr -s ' '
		)
		KEY=$(head -1 <<< $OUT)
		ROWS=$(tail -n +2 <<< $OUT)

		case "$KEY" in

			ctrl-u)
				while read ROW; do
					ARGS=( ${(s. .)ROW} )
					STATUS=${ARGS[2]}
					REMOTE_MOD=${STATUS[9]}
					NAME=${ARGS[4]}
				
					if [ "$REMOTE_MOD" != "-" ]; then
						echo Updating $NAME
						$SVN update --parents $NAME 
					else
						echo Skipping $NAME
					fi
					
				done <<< $(echo $ROWS) 
				confirm
				reload
				;;

			ctrl-r)
				while read ROW; do
					ARGS=( ${(s. .)ROW} )
					STATUS=${ARGS[2]}
					LOCAL_MOD=${STATUS[1]}
					NAME=${ARGS[4]}
				
					if [ "$LOCAL_MOD" != "-" ]; then
						echo Reverting $NAME
						$SVN revert $NAME 
					else
						echo Skipping $NAME
					fi
					
				done <<< $(echo $ROWS) 
				confirm
				reload
				;;

			ctrl-m)
				ROW=$(echo $ROWS | tail -1 )
				ARGS=( ${(s. .)ROW} )
				STATUS=${ARGS[2]}
				LOCAL_MOD=${STATUS[1]}
				NAME=${ARGS[4]}

				if [ "$LOCAL_MOD" != "-" ]; then
					echo Merging $NAME
					svn compare $NAME 
				else
					echo Skipping $NAME
					confirm
				fi
				
				reload
				;;

			ctrl-s)
				while read ROW; do
					ARGS=( ${(s. .)ROW} )
					LIST=${ARGS[1]}
					STATUS=${ARGS[2]}
					LOCAL_MOD=${STATUS[1]}
					NAME=${ARGS[4]}
					
					PROCESS=Y

					if [ "$LOCAL_MOD" = "?" ]; then
						echo Adding $NAME
						$SVN add $NAME 
					elif [ "$LOCAL_MOD" != "M" ]; then
						PROCESS=N
					fi

					if [ "$LIST" = "stage" ]; then
						PROCESS=N
					fi

					if [ "$PROCESS" = "Y" ]; then
						echo Staging $NAME
						svn changes add stage $NAME
					else
						echo Skipping $NAME
					fi
					
				done <<< $(echo $ROWS) 

				svn changes list stage
				echo -n "Staged files: (c)ommit, or any other to ignore "
				KEY=$(read -sk1 -e )
				echo
				case "$KEY" in
					c)
						svn changes commit stage
						confirm
						;;
				esac
				reload
				;;

			ctrl-x)
				while read ROW; do
					ARGS=( ${(s. .)ROW} )
					LIST=${ARGS[1]}
					NAME=${ARGS[4]}
					
					if [ "$LIST" = "stage" ]; then
						PROCESS=N
						echo Unstaging $NAME
						svn changes remove stage $NAME
					else
						echo Skipping $NAME
					fi
					
				done <<< $(echo $ROWS) 
				confirm
				reload
				;;

			ctrl-t)
				STAGED=N
				while read ROW; do
					ARGS=( ${(s. .)ROW} )
					LIST=${ARGS[1]}
					
					if [ "$LIST" = "stage" ]; then
						STAGED=Y
					fi
				done <<< $(svn changes remote) 
				
				if [ "$STAGED" = "Y" ]; then
					svn changes commit stage
				else
					svn commit
				fi
				confirm
				reload
				;;

			*)
				#ROW=$(echo $ROWS | tail -1 )
				#ARGS=( ${(s. .)ROW} )
				#STATUS=${ARGS[2]}
				#REV=${ARGS[3]}
				#NAME=${ARGS[4]}

				#[ -z "$NAME" ] && exit 0	

				#[ "$REV" != "?" ] && SUFFIX=@${REV} || SUFFIX=''
				#echo -n ${NAME}${SUFFIX} | clip-copy --tee	
				;;

		esac
		;;
				
esac
